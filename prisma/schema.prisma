// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  vehicles  Vehicle[]
}

model Vehicle {
  id        Int       @id @default(autoincrement())
  make      String
  model     String
  year      Int
  vin       String    @unique
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  maintenance Maintenance[]
  insurance Insurance[]
  registration Registration[]
  createdAt DateTime  @default(now())
}

model Maintenance {
  id             Int       @id @default(autoincrement())
  vehicleId      Int
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  description    String
  maintenanceDate DateTime
  nextDueDate    DateTime
  createdAt      DateTime  @default(now())
}

model Insurance {
  id             Int       @id @default(autoincrement())
  vehicleId      Int
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  providerName   String
  policyNumber   String
  expirationDate DateTime
  createdAt      DateTime  @default(now())
}

model Registration {
  id             Int       @id @default(autoincrement())
  vehicleId      Int
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  registrationNumber String
  expirationDate DateTime
  createdAt      DateTime  @default(now())
}
