datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  vehicles  Vehicle[]
}

model Vehicle {
  id                   Int                    @id @default(autoincrement())
  make                 String
  model                String
  year                 Int
  userId               Int
  user                 User                   @relation(fields: [userId], references: [id])
  insurances           Insurance[]
  technicalInspections TechnicalInspection[]
  registrations        Registration[]
  maintenances        Maintenance[]
  generalRecords       GeneralRecord[]
  createdAt           DateTime               @default(now())
}

model Insurance {
  id             Int       @id @default(autoincrement())
  vehicleId      Int
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  providerName   String
  policyNumber   String
  expirationDate DateTime
  createdAt      DateTime  @default(now())
}

model TechnicalInspection {
  id             Int       @id @default(autoincrement())
  vehicleId      Int
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  inspectionDate DateTime
  nextDueDate    DateTime
  status         String    // e.g., "Passed", "Failed"
  createdAt      DateTime  @default(now())
}

model Registration {
  id                  Int       @id @default(autoincrement())
  vehicleId           Int
  vehicle             Vehicle   @relation(fields: [vehicleId], references: [id])
  registrationNumber  String
  expirationDate      DateTime
  createdAt           DateTime  @default(now())
}

model Maintenance {
  id             Int       @id @default(autoincrement())
  vehicleId      Int
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  description    String
  maintenanceDate DateTime
  nextDueDate    DateTime
  createdAt      DateTime  @default(now())
}

model GeneralRecord {
  id             Int       @id @default(autoincrement())
  vehicleId      Int
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  recordType     String    // Type of general record (e.g., "Tire Rotation", "Battery Change")
  description    String?   // Optional description
  date           DateTime  // Date when the record was created or the event occurred
  expirationDate DateTime? // Expiration date if applicable
  createdAt      DateTime  @default(now())
}
